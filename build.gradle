buildscript {
    repositories {
    	maven { url  = 'https://plugins.gradle.org/m2/' }
    }
}

plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT'
	id 'maven-publish'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id "com.modrinth.minotaur" version "2.+"
}

import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import com.modrinth.minotaur.dependencies.ModDependency

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url "https://cfa2.cursemaven.com" }
    maven { url "https://maven.shedaniel.me/" }
    maven { url 'https://dl.cloudsmith.io/public/azuredoom-mods/azurelib/maven/' }
    maven { url 'https://dl.cloudsmith.io/public/tslat/sbl/maven/' }
    maven { url 'https://maven.blamejared.com' }
    maven { url 'https://plugins.gradle.org/m2/' }
	maven { url 'https://maven.terraformersmc.com/' }
	maven { url 'https://maven.kosmx.dev/' }
	maven { url 'https://jitpack.io' }
	maven { url 'https://api.modrinth.com/maven' }
	maven {url = "https://maven.kyrptonaught.dev"}
}

configurations {
    shade
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "net.tslat.smartbrainlib:SmartBrainLib-fabric-1.20:1.11"
	modImplementation "net.tslat.smartbrainlib:SmartBrainLib-common-1.20:1.11"
  	modImplementation 'mod.azure.azurelib:azurelib-fabric-1.20.1:1.0.18'
	modImplementation ("com.terraformersmc:modmenu:7.0.0-beta.2")
    modCompileOnly("me.shedaniel:RoughlyEnoughItems-api-fabric:12.0.622") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modRuntimeOnly("me.shedaniel:RoughlyEnoughItems-fabric:12.0.622") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modApi("dev.architectury:architectury-fabric:9.0.7") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modApi("me.shedaniel.cloth:cloth-config-fabric:11.0.99") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modImplementation "curse.maven:trinkets-341284:4657534"
    modImplementation "curse.maven:cardinal-components-318449:4547791"
    modImplementation "curse.maven:cardinal-components-base-318449:4576292"
    modImplementation "curse.maven:cardinal-components-entity-318449:4547795"
    modImplementation 'net.kyrptonaught:customportalapi:0.0.1-beta64-1.20'
    include 'net.kyrptonaught:customportalapi:0.0.1-beta64-1.20'
    modImplementation "curse.maven:worldedit-225608:4586218"
}

processResources {
    inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

processResources {
	doLast {
        def jsonMinifyStart = System.currentTimeMillis()
        def jsonMinified = 0
        def jsonBytesSaved = 0
        fileTree(dir: outputs.files.asPath, include: '**/*.json').each { 
            File file = it
            jsonMinified++
            def oldLength = file.length()
            file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
            jsonBytesSaved += oldLength - file.length()
        }
        println('Minified ' + jsonMinified + ' json files. Saved ' + jsonBytesSaved + ' bytes. Took ' + (System.currentTimeMillis() - jsonMinifyStart) + 'ms.')
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from "LICENSE"
}

loom {
	accessWidenerPath = file("src/main/resources/doom.accesswidener")
}

if (file('key.properties').exists()) {
    curseforge {

    	def curseProp = new Properties()
    	File secretPropsFile = file("key.properties")
    	curseProp.load(secretPropsFile.newInputStream())

    	project {
        	apiKey = curseProp.getProperty('curseKey')
        	id = "${curse_id}"
        	releaseType = "${curse_release}"
        	changelogType = 'text'
        	changelog = file('CHANGELOG.txt')
			addGameVersion("1.20.1")
			addGameVersion("Fabric")
			addGameVersion("Quilt")
			addGameVersion("Java 17")

        	relations {
            	requiredDependency 'fabric-api'  
            	requiredDependency 'azurelib'  
            	requiredDependency 'trinkets'  
            	requiredDependency 'smartbrainlib'  
            	optionalDependency 'better-combat-by-daedelus' 
        	}
        	mainArtifact(remapJar)

        	afterEvaluate {
            	uploadTask.dependsOn("remapJar")
        	}
    	}
    	options {
    		//debug = true
        	forgeGradleIntegration = false
    	}
    }
}

if (file('key.properties').exists()) {
	modrinth {
		def modrinthProp = new Properties()
		File secretPropsFile = file("key.properties")
		modrinthProp.load(secretPropsFile.newInputStream())
		
		token = modrinthProp.getProperty('modrinthKey')
		projectId = 'Mfo4FiDF' 
		versionNumber = project.mod_version 
		versionName = 'Fabric/Quilt 1.20.1'
		uploadFile = remapJar 
		changelog = rootProject.file("changelog.txt").text
		gameVersions = ['1.20.1']
		loaders = ['fabric','quilt']
		dependencies { 
        	required.project "azurelib"
        	required.project "trinkets"
        	required.project "fabric-api"
        	required.project "smartbrainlib"
        	optional.project "better-combat"
            optional.project "modmenu"
   		}
	}
}