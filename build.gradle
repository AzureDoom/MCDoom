buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
		maven { url  = 'https://plugins.gradle.org/m2/' }
        jcenter()
        mavenCentral()
        gradlePluginPortal()
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath "com.modrinth.minotaur:Minotaur:2.+"
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: 'java'
apply plugin: 'org.spongepowered.mixin'
apply plugin: "com.modrinth.minotaur"


import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import com.modrinth.minotaur.dependencies.ModDependency

version = project.mod_version
group = "mod.azure.doom"
archivesBaseName = "MCDoom-Forge-1.20.1"


java.toolchain.languageVersion = JavaLanguageVersion.of(17)

mixin {
    add sourceSets.main, "doom.refmap.json"
}

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: 'official', version: '1.20.1'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            arg "-mixin.config=doom.mixins.json"
            workingDirectory project.file('run')
            taskName 'doomforge1.20_client'
            mods {
                doomweapon {
                    source sourceSets.main
                }
            }
        }
        server {
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            arg "-mixin.config=doom.mixins.json"
            workingDirectory project.file('run')
            taskName 'doomforge1.20_server'
            mods {
                doomweapon {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven { url "https://maven.theillusivec4.top/" }
    maven { url "https://minecraft.curseforge.com/api/maven/" }
    maven { url 'https://dl.cloudsmith.io/public/azuredoom-mods/azurelib/maven/' }
    maven { url 'https://dl.cloudsmith.io/public/tslat/sbl/maven/' }
    maven { url "https://maven.blamejared.com" }
	maven { url "https://cfa2.cursemaven.com" }
	maven { url "https://maven.shedaniel.me" }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.0.0'
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:5.2.0-beta.2+1.20")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:5.2.0-beta.2+1.20:api")
  	implementation fg.deobf('mod.azure.azurelib:azurelib-forge-1.20.1:1.0.15')
	annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'
    implementation fg.deobf("me.shedaniel:RoughlyEnoughItems-forge:12.0.625")
    implementation fg.deobf("curse.maven:REIPC-521393:4580904")
    implementation fg.deobf("me.shedaniel.cloth:cloth-config-forge:11.0.99")
    implementation fg.deobf("dev.architectury:architectury-forge:9.0.7")
	implementation fg.deobf("net.tslat.smartbrainlib:SmartBrainLib-forge-1.20:1.11")
	implementation fg.deobf("net.tslat.smartbrainlib:SmartBrainLib-common-1.20:1.11")
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

jar {
    manifest {
        attributes([
            "Specification-Title": "doom",
            "Specification-Vendor": "azuredoom",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"azuredoom",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "doom.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

processResources {
	doLast {
        def jsonMinifyStart = System.currentTimeMillis()
        def jsonMinified = 0
        def jsonBytesSaved = 0
        fileTree(dir: outputs.files.asPath, include: '**/*.json').each { 
            File file = it
            jsonMinified++
            def oldLength = file.length()
            file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
            jsonBytesSaved += oldLength - file.length()
        }
        println('Minified ' + jsonMinified + ' json files. Saved ' + jsonBytesSaved + ' bytes. Took ' + (System.currentTimeMillis() - jsonMinifyStart) + 'ms.')
    }
}

if (file('key.properties').exists()) {
    curseforge {

    	def curseProp = new Properties()
    	File secretPropsFile = file("key.properties")
    	curseProp.load(secretPropsFile.newInputStream())

    	project {
        	apiKey = curseProp.getProperty('curseKey')
        	id = "${curse_id}"
        	releaseType = "${curse_release}"
        	changelogType = 'text'
        	changelog = file('CHANGELOG.txt')
        	addGameVersion("1.20.1")
        	addGameVersion("Forge")
        	addGameVersion("Java 17")

        	relations {
            	requiredDependency 'curios'  
            	requiredDependency 'azurelib' 
            	requiredDependency 'smartbrainlib'  
            	optionalDependency 'better-combat-by-daedelus' 
        	}
    	}
    }
}

if (file('key.properties').exists()) {
	modrinth {
		def modrinthProp = new Properties()
		File secretPropsFile = file("key.properties")
		modrinthProp.load(secretPropsFile.newInputStream())
		
		token = modrinthProp.getProperty('modrinthKey')
		projectId = 'Mfo4FiDF' 
		versionNumber = project.mod_version 
		versionName = 'Forge 1.20.1'
		uploadFile = jar 
		changelog = rootProject.file("changelog.txt").text
		gameVersions = ['1.20.1']
		loaders = ['forge']
		dependencies { 
        	required.project "azurelib"
        	required.project "smartbrainlib"
        	optional.project "better-combat"
   		}
	}
}