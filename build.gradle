buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
		maven { url  = 'https://plugins.gradle.org/m2/' }
        jcenter()
        mavenCentral()
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: 'java'
apply plugin: 'org.spongepowered.mixin'
apply from: 'https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle'

configurations.all {
    resolutionStrategy {
        force 'cpw.mods:securejarhandler:0.9.50'
    }
}

import groovy.json.JsonSlurper
import groovy.json.JsonOutput

version = "4.0.6"
group = "mod.azure.doomweapon"
archivesBaseName = "MCDoom-1.17.1"


java.toolchain.languageVersion = JavaLanguageVersion.of(16)

mixin {
    add sourceSets.main, "doom.refmap.json"
}

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: 'official', version: '1.17.1'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            arg "-mixin.config=doom.mixins.json"
            workingDirectory project.file('run')
            mods {
                doomweapon {
                    source sourceSets.main
                }
            }
        }
        server {
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            arg "-mixin.config=doom.mixins.json"
            workingDirectory project.file('run')
            mods {
                doomweapon {
                    source sourceSets.main
                }
            }
        }
        data {
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            arg "-mixin.config=doom.mixins.json"
            workingDirectory project.file('run')
            args '--mod', 'doomweapon', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                doomweapon {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven { url = "https://maven.theillusivec4.top/" }
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven { url 'https://maven.blamejared.com' }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft 'net.minecraftforge:forge:1.17.1-37.0.59'
	implementation fg.deobf('software.bernie.geckolib:curios:1.17.1-5.0.1.0')
	implementation fg.deobf('software.bernie.geckolib:geckolib-1.17.1:3.0.1')
	annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

jar {
    manifest {
        attributes([
            "Specification-Title": "doom",
            "Specification-Vendor": "azuredoom",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"azuredoom",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "doom.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

processResources {
	doLast {
        def jsonMinifyStart = System.currentTimeMillis()
        def jsonMinified = 0
        def jsonBytesSaved = 0
        fileTree(dir: outputs.files.asPath, include: '**/*.json').each { 
            File file = it
            jsonMinified++
            def oldLength = file.length()
            file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
            jsonBytesSaved += oldLength - file.length()
        }
        println('Minified ' + jsonMinified + ' json files. Saved ' + jsonBytesSaved + ' bytes. Took ' + (System.currentTimeMillis() - jsonMinifyStart) + 'ms.')
    }
}

if (file('key.properties').exists()) {
    curseforge {

    	def curseProp = new Properties()
    	File secretPropsFile = file("key.properties")
    	curseProp.load(secretPropsFile.newInputStream())

    	project {
        	apiKey = curseProp.getProperty('curseKey')
        	id = "${curse_id}"
        	releaseType = "${curse_release}"
        	changelogType = 'text'
        	changelog = file('CHANGELOG.txt')
        	addGameVersion("1.17.1")
        	addGameVersion("Forge")
        	addGameVersion("Java 8")

        	relations {
            	requiredDependency 'curios'  
            	requiredDependency 'geckolib' 
        	}
    	}
    }
}